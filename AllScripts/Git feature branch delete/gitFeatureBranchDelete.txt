
-- git branch –D <branch_name>

-- for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format="%ci %cr" $branch | head -n 1` \\t$branch; done | sort -r

-- git for-each-ref --sort='-committerdate:iso8601' --format=' %(committerdate:iso8601)%09%(refname)' refs/heads 
--  git pull --all 
-- git fetch --prune
-- git branch -D <branch_name>
-- git push origin --delete <branch_name> ( git push origin --delete feature/Test )
-- git fetch --all --prune  ( other repo or Other system they have to run this command not to see deleted branches )

# -------------------- code starts--------------
date_validate=2019-10-01
for branch in `git branch -r | grep -v HEAD | grep feature`
do
lastcommit_date=`git show --format="%ci" $branch | head -n 1 | awk '{print $1}'`

if [[ "$lastcommit_date" < "$date_validate" ]]
then
echo -e `git show --format="%ci" $branch | head -n 1` \\t$branch
fi

done

# ------------------ Code ends ----------------------
# One line code : git fetch --all;git pull --all ;echo -e "Enter the validation date : ";read date_validate ;for branch in `git branch -r | grep -v HEAD | grep feature`; do lastcommit_date=`git show --format="%ci" $branch | head -n 1 | awk '{print $1}'`; if [[ "$lastcommit_date" < "$date_validate" ]]; then echo -e `
git show --format="%ci" $branch | head -n 1` \\t$branch; fi; done

# Version 2 starts

echo -e "Enter the validation date : "
read date_validate
>| list_repo
ls -d */ | while read line1
do
	#line1="$(echo -e "${line}" | tr -d '[:space:]')"
	cd ${line1}
	git fetch --all
	git pull --all
	echo -e "Listing branches under repository ${line1}\n" >> list_repo
	for branch in `git branch -r | grep -v HEAD | grep feature`
	do
		lastcommit_date=`git show --format="%ci" $branch | head -n 1 | awk '{print $1}'`

		if [[ "$lastcommit_date" < "$date_validate" ]]
		then
			echo -e `git show --format="%ci" $branch | head -n 1` \\t$branch >> list_repo
		fi

	done
	cd ..
done


# Version 2 Ends